-- MySQL Script generated by MySQL Workbench
-- Thu May 28 16:17:12 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
-- -----------------------------------------------------
-- Schema mobile_app
-- -----------------------------------------------------
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`exercice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`exercice` ;

CREATE TABLE IF NOT EXISTS `mydb`.`exercice` (
  `id` INT NOT NULL,
  `name` CHAR(45) NOT NULL,
  `goal` INT NOT NULL,
  `priority` INT NOT NULL,
  `level` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`user_info` ;

CREATE TABLE IF NOT EXISTS `mydb`.`user_info` (
  `id_usuario` INT NOT NULL,
  `first_name` CHAR(30) NOT NULL,
  `last_name` CHAR(30) NOT NULL,
  `date_of_birth` DATETIME NOT NULL,
  `id_facebook` CHAR(50) NOT NULL,
  `email` CHAR(50) NOT NULL,
  `level` INT NOT NULL,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`sensor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`sensor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`sensor` (
  `id_sensor` INT NOT NULL,
  `name` CHAR(20) NOT NULL,
  `encoding` CHAR(10) NOT NULL,
  `num_bytes` CHAR(1) NOT NULL,
  PRIMARY KEY (`id_sensor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`biometric_data`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`biometric_data` ;

CREATE TABLE IF NOT EXISTS `mydb`.`biometric_data` (
  `id` INT NOT NULL,
  `name` CHAR(20) NOT NULL,
  `sensor_id_sensor` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_biometric_data_sensor2_idx` (`sensor_id_sensor` ASC),
  CONSTRAINT `fk_biometric_data_sensor2`
    FOREIGN KEY (`sensor_id_sensor`)
    REFERENCES `mydb`.`sensor` (`id_sensor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`biometric_meassurement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`biometric_meassurement` ;

CREATE TABLE IF NOT EXISTS `mydb`.`biometric_meassurement` (
  `id` INT NOT NULL,
  `timestamp` DATETIME NOT NULL,
  `value` CHAR(10) NOT NULL,
  `biometric_data_id` INT NOT NULL,
  `user_info_id_usuario` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_biometric_meassurement_biometric_data1_idx` (`biometric_data_id` ASC),
  INDEX `fk_biometric_meassurement_user_info1_idx` (`user_info_id_usuario` ASC),
  CONSTRAINT `fk_biometric_meassurement_biometric_data1`
    FOREIGN KEY (`biometric_data_id`)
    REFERENCES `mydb`.`biometric_data` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_biometric_meassurement_user_info1`
    FOREIGN KEY (`user_info_id_usuario`)
    REFERENCES `mydb`.`user_info` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`units`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`units` ;

CREATE TABLE IF NOT EXISTS `mydb`.`units` (
  `id` INT NOT NULL,
  `name` CHAR(45) NOT NULL,
  `is_time_related` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`routine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`routine` ;

CREATE TABLE IF NOT EXISTS `mydb`.`routine` (
  `id` INT NOT NULL,
  `name` CHAR(45) NOT NULL,
  `level` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`set`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`set` ;

CREATE TABLE IF NOT EXISTS `mydb`.`set` (
  `id` INT NOT NULL,
  `name` CHAR(45) NOT NULL,
  `level` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`routine_schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`routine_schedule` ;

CREATE TABLE IF NOT EXISTS `mydb`.`routine_schedule` (
  `id` VARCHAR(45) NOT NULL,
  `quantity` REAL NOT NULL,
  `units_id` INT NOT NULL,
  `routine_id` INT NOT NULL,
  `set_id` INT NOT NULL,
  `exercice_id` INT NOT NULL,
  `user_info_id_usuario` INT NOT NULL,
  INDEX `fk_routine_schedule_units1_idx` (`units_id` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_routine_schedule_routine1_idx` (`routine_id` ASC),
  INDEX `fk_routine_schedule_set1_idx` (`set_id` ASC),
  INDEX `fk_routine_schedule_exercice1_idx` (`exercice_id` ASC),
  INDEX `fk_routine_schedule_user_info1_idx` (`user_info_id_usuario` ASC),
  CONSTRAINT `fk_routine_schedule_units1`
    FOREIGN KEY (`units_id`)
    REFERENCES `mydb`.`units` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_routine_schedule_routine1`
    FOREIGN KEY (`routine_id`)
    REFERENCES `mydb`.`routine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_routine_schedule_set1`
    FOREIGN KEY (`set_id`)
    REFERENCES `mydb`.`set` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_routine_schedule_exercice1`
    FOREIGN KEY (`exercice_id`)
    REFERENCES `mydb`.`exercice` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_routine_schedule_user_info1`
    FOREIGN KEY (`user_info_id_usuario`)
    REFERENCES `mydb`.`user_info` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`exercice_classifier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`exercice_classifier` ;

CREATE TABLE IF NOT EXISTS `mydb`.`exercice_classifier` (
  `id` INT NOT NULL,
  `classifier` BLOB NOT NULL,
  `exercice_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_exercice_classifier_exercice1_idx` (`exercice_id` ASC),
  CONSTRAINT `fk_exercice_classifier_exercice1`
    FOREIGN KEY (`exercice_id`)
    REFERENCES `mydb`.`exercice` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`activity_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`activity_type` ;

CREATE TABLE IF NOT EXISTS `mydb`.`activity_type` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`exercice_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`exercice_log` ;

CREATE TABLE IF NOT EXISTS `mydb`.`exercice_log` (
  `sucess_reps` INT NOT NULL,
  `wrong_reps` INT NOT NULL,
  `total_reps` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `start_time` DATETIME NOT NULL,
  `end_time` DATETIME NOT NULL,
  `id_activity` INT NOT NULL,
  `activity_type_id` INT NOT NULL,
  `user_info_id_usuario` INT NOT NULL,
  INDEX `fk_exercice_log_activity_type1_idx` (`activity_type_id` ASC),
  INDEX `fk_exercice_log_user_info1_idx` (`user_info_id_usuario` ASC),
  CONSTRAINT `fk_exercice_log_activity_type1`
    FOREIGN KEY (`activity_type_id`)
    REFERENCES `mydb`.`activity_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_exercice_log_user_info1`
    FOREIGN KEY (`user_info_id_usuario`)
    REFERENCES `mydb`.`user_info` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`achievement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`achievement` ;

CREATE TABLE IF NOT EXISTS `mydb`.`achievement` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `quantity` REAL NOT NULL,
  `id_activity` INT NOT NULL,
  `is_acomplished` TINYINT(1) NOT NULL,
  `units_id` INT NOT NULL,
  `activity_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_achievement_units1_idx` (`units_id` ASC),
  INDEX `fk_achievement_activity_type1_idx` (`activity_type_id` ASC),
  CONSTRAINT `fk_achievement_units1`
    FOREIGN KEY (`units_id`)
    REFERENCES `mydb`.`units` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_achievement_activity_type1`
    FOREIGN KEY (`activity_type_id`)
    REFERENCES `mydb`.`activity_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`biometric_data_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`biometric_data_log` ;

CREATE TABLE IF NOT EXISTS `mydb`.`biometric_data_log` (
  `id` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `user_info_id_usuario` INT NOT NULL,
  `value` REAL NOT NULL,
  `description` CHAR(30) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_biometric_data_log_user_info1_idx` (`user_info_id_usuario` ASC),
  CONSTRAINT `fk_biometric_data_log_user_info1`
    FOREIGN KEY (`user_info_id_usuario`)
    REFERENCES `mydb`.`user_info` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`social_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`social_info` ;

CREATE TABLE IF NOT EXISTS `mydb`.`social_info` (
  `id` INT NOT NULL,
  `name` CHAR(100) NOT NULL,
  `social_user` CHAR(45) NOT NULL,
  `social_secure_token` CHAR(45) NOT NULL,
  `is_enabled` TINYINT(1) NOT NULL,
  `user_info_id_usuario` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_social_info_user_info1_idx` (`user_info_id_usuario` ASC),
  CONSTRAINT `fk_social_info_user_info1`
    FOREIGN KEY (`user_info_id_usuario`)
    REFERENCES `mydb`.`user_info` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`social_activity_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`social_activity_log` ;

CREATE TABLE IF NOT EXISTS `mydb`.`social_activity_log` (
  `id` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `social_info_id` INT NOT NULL,
  `user_info_id_usuario` INT NOT NULL,
  `message` CHAR(200) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_social_activity_log_social_info1_idx` (`social_info_id` ASC),
  INDEX `fk_social_activity_log_user_info1_idx` (`user_info_id_usuario` ASC),
  CONSTRAINT `fk_social_activity_log_social_info1`
    FOREIGN KEY (`social_info_id`)
    REFERENCES `mydb`.`social_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_social_activity_log_user_info1`
    FOREIGN KEY (`user_info_id_usuario`)
    REFERENCES `mydb`.`user_info` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`facebook_groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`facebook_groups` ;

CREATE TABLE IF NOT EXISTS `mydb`.`facebook_groups` (
  `id` INT NOT NULL,
  `name` CHAR(45) NOT NULL,
  `fb_token` CHAR(100) NOT NULL,
  `social_info_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_facebook_groups_social_info1_idx` (`social_info_id` ASC),
  CONSTRAINT `fk_facebook_groups_social_info1`
    FOREIGN KEY (`social_info_id`)
    REFERENCES `mydb`.`social_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
